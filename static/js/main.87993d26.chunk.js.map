{"version":3,"sources":["Loading.js","Dictionary.js","App.js","index.js"],"names":["Loading","className","Dictionary","useState","searchQuery","setSearchQuery","words","setWords","loading","setLoading","error","setError","audioRef","useRef","fetchData","a","fetch","response","ok","Error","json","word","message","useEffect","onClick","window","location","reload","onSubmit","e","preventDefault","htmlFor","type","name","id","placeholder","value","onChange","target","phonetic","current","play","origin","meanings","map","speech","index","partOfSpeech","definitions","wordDefinition","definition","example","synonyms","synonym","href","phonetics","wordAudio","src","audio","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAIeA,EAJC,WACf,OAAO,qBAAKC,UAAU,YCqMRC,EA7LI,WAClB,MAAsCC,mBAAS,cAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0BN,mBAAS,MAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACMC,EAAWC,mBAEXC,EAAS,uCAAG,8BAAAC,EAAA,+EAEOC,MAAM,sDAAD,OAC2BZ,IAHvC,WAEVa,EAFU,QAMFC,GANE,sBAOTC,MACL,8EARc,uBAWGF,EAASG,OAXZ,OAWVC,EAXU,OAahBd,EAASc,GACTZ,GAAW,GAdK,kDAgBhBE,EAAS,KAAMW,SAhBC,0DAAH,qDAmCf,OALAC,qBAAU,WACTT,MACE,IAGCJ,EAEF,qCACC,8BAAMA,IACN,wBACCT,UAAU,QACVuB,QAAS,kBAAMC,OAAOC,SAASC,UAFhC,6BASCnB,EACI,cAAC,EAAD,IAIP,qCACC,0BAASP,UAAU,UAAnB,UACC,mCACC,oBAAIA,UAAU,QAAd,wBACA,uBAAM2B,SArCS,SAACC,GACnBA,EAAEC,iBACFrB,GAAW,GACXK,KAkCG,UACC,gCACC,uBAAOiB,QAAQ,SAAf,oBACA,uBACCC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHC,YAAY,0BACZC,MAAOhC,EACPiC,SAAU,SAACR,GAAD,OAAOxB,EAAewB,EAAES,OAAOF,aAG3C,wBAAQJ,KAAK,SAAb,SACC,cAAC,IAAD,YAKH,kCACC,gCACC,sBAAK/B,UAAU,OAAf,UACC,gCACC,6BAAKK,EAAM,GAAGe,OACd,oBAAGpB,UAAU,UAAb,cAAyBK,EAAM,GAAGiC,SAAlC,UAED,qBAAKtC,UAAU,aAAf,SACC,wBAAQuB,QAAS,WAxDvBZ,EAAS4B,QAAQC,QAwDX,SACC,cAAC,IAAD,WAIFnC,EAAM,GAAGoC,OACT,sBAAKzC,UAAU,UAAf,UACC,yCACA,4BAAIK,EAAM,GAAGoC,YAGd,WAMJ,0BAASzC,UAAU,kBAAnB,UACC,yCAEA,oBAAIA,UAAU,UAAd,SACEK,EAAM,GAAGqC,SAASC,KAAI,SAACC,EAAQC,GAAT,OACtB,+BACC,6BAAKD,EAAOE,eACXF,EAAOG,YAAYJ,KAAI,SAACK,EAAgBH,GAAjB,OACvB,sBAAK7C,UAAU,kBAAf,UACC,mBAAGA,UAAU,aAAb,SACEgD,EAAeC,aAGhBD,EAAeE,QACf,mBAAGlD,UAAU,UAAb,SACEgD,EAAeE,UAGjB,GAGAF,EAAeG,UACf,sBAAKnD,UAAU,WAAf,UACC,0CACA,8BACEgD,EAAeG,SAASR,KACxB,SAACS,EAASP,GACT,KAAIA,GAAS,GACb,OACC,4BACEO,GADMP,aArBuBA,QAH/BA,WA8CZ,mCACC,2DAC4B,IAC3B,mBACCQ,KAAK,qCACLhB,OAAO,SAFR,SAGC,cAAC,IAAD,SAIF,mBACCgB,KAAK,4CACLhB,OAAO,SACPrC,UAAU,cAHX,SAIC,cAAC,IAAD,SAIDK,EAAM,GAAGiD,UAAUX,KAAI,SAACY,EAAWV,GAAZ,OACvB,wBACCW,IAAG,eAAUD,EAAUE,OAEvBC,IAAK/C,EAHN,8CAKC,yCALD,cAEMkC,UClLKc,MARf,WACC,OACC,qBAAK3D,UAAU,YAAf,SACC,cAAC,EAAD,OCCH4D,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.87993d26.chunk.js","sourcesContent":["const Loading = () => {\r\n\treturn <div className='loader'></div>\r\n}\r\n\r\nexport default Loading\r\n","import { useEffect, useRef, useState } from 'react'\r\nimport {\r\n\tIoLogoGithub,\r\n\tIoLogoTwitter,\r\n\tIoSearchOutline,\r\n\tIoVolumeHigh,\r\n} from 'react-icons/io5'\r\nimport Loading from './Loading'\r\n\r\nconst Dictionary = () => {\r\n\tconst [searchQuery, setSearchQuery] = useState('dictionary')\r\n\tconst [words, setWords] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [error, setError] = useState(null)\r\n\tconst audioRef = useRef()\r\n\r\n\tconst fetchData = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t`https://api.dictionaryapi.dev/api/v2/entries/en_US/${searchQuery}`\r\n\t\t\t)\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow Error(\r\n\t\t\t\t\t\"Sorry pal, we couldn't find definitions for the word you were looking for.\"\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tconst word = await response.json()\r\n\r\n\t\t\tsetWords(word)\r\n\t\t\tsetLoading(false)\r\n\t\t} catch (error) {\r\n\t\t\tsetError(error.message)\r\n\t\t}\r\n\t}\r\n\r\n\tconst searchWord = (e) => {\r\n\t\te.preventDefault()\r\n\t\tsetLoading(true)\r\n\t\tfetchData()\r\n\t}\r\n\r\n\tconst playWordAudio = () => {\r\n\t\taudioRef.current.play()\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData()\r\n\t}, [])\r\n\r\n\t// display error message if an error is encounted\r\n\tif (error) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>{error}</div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='error'\r\n\t\t\t\t\tonClick={() => window.location.reload()}>\r\n\t\t\t\t\tRefresh Page\r\n\t\t\t\t</button>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section className='heading'>\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<h1 className='title'>WordSearch</h1>\r\n\t\t\t\t\t<form onSubmit={searchWord}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label htmlFor='search'>Search</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='search'\r\n\t\t\t\t\t\t\t\tname='search'\r\n\t\t\t\t\t\t\t\tid='search'\r\n\t\t\t\t\t\t\t\tplaceholder='Search words in english'\r\n\t\t\t\t\t\t\t\tvalue={searchQuery}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setSearchQuery(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button type='submit'>\r\n\t\t\t\t\t\t\t<IoSearchOutline />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</header>\r\n\r\n\t\t\t\t<article>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className='word'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h2>{words[0].word}</h2>\r\n\t\t\t\t\t\t\t\t<p className='phonics'>/{words[0].phonetic}/</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='play-audio'>\r\n\t\t\t\t\t\t\t\t<button onClick={() => playWordAudio()}>\r\n\t\t\t\t\t\t\t\t\t<IoVolumeHigh />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{words[0].origin ? (\r\n\t\t\t\t\t\t\t<div className='details'>\r\n\t\t\t\t\t\t\t\t<h2>Origin:</h2>\r\n\t\t\t\t\t\t\t\t<p>{words[0].origin}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</article>\r\n\t\t\t</section>\r\n\r\n\t\t\t<article className='meaning-section'>\r\n\t\t\t\t<h2>Meaning</h2>\r\n\r\n\t\t\t\t<ul className='meaning'>\r\n\t\t\t\t\t{words[0].meanings.map((speech, index) => (\r\n\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t<h2>{speech.partOfSpeech}</h2>\r\n\t\t\t\t\t\t\t{speech.definitions.map((wordDefinition, index) => (\r\n\t\t\t\t\t\t\t\t<div className='meaning-details' key={index}>\r\n\t\t\t\t\t\t\t\t\t<p className='definition'>\r\n\t\t\t\t\t\t\t\t\t\t{wordDefinition.definition}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t\t\t{wordDefinition.example ? (\r\n\t\t\t\t\t\t\t\t\t\t<p className='example'>\r\n\t\t\t\t\t\t\t\t\t\t\t{wordDefinition.example}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{wordDefinition.synonyms && (\r\n\t\t\t\t\t\t\t\t\t\t<div className='opposite'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>Synonmys</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{wordDefinition.synonyms.map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(synonym, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (index >= 5) return\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{synonym}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t{/* <ul className='antonyms'>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<a href='#'>purpose</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul> */}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</article>\r\n\r\n\t\t\t<footer>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tcreated by Williams Samuel{' '}\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref='https://twitter.com/williams_codes'\r\n\t\t\t\t\t\ttarget='_blank'>\r\n\t\t\t\t\t\t<IoLogoTwitter />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<a\r\n\t\t\t\t\thref='https://github.com/williamssam/wordsearch'\r\n\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\tclassName='github-link'>\r\n\t\t\t\t\t<IoLogoGithub />\r\n\t\t\t\t</a>\r\n\t\t\t</footer>\r\n\r\n\t\t\t{words[0].phonetics.map((wordAudio, index) => (\r\n\t\t\t\t<audio\r\n\t\t\t\t\tsrc={`http:${wordAudio.audio}`}\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tref={audioRef}>\r\n\t\t\t\t\tYour browser does not support the\r\n\t\t\t\t\t<code>audio</code> element.\r\n\t\t\t\t</audio>\r\n\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Dictionary\r\n","import Dictionary from './Dictionary'\n\nfunction App() {\n\treturn (\n\t\t<div className='container'>\n\t\t\t<Dictionary />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}